

Prompt for target technology
CONFIG_SYN_INFERRED
  Selects the target technology for memory and pads.
  The following are available:

  - Inferred: Generic FPGA or ASIC targets if your synthesis tool
    is capable of inferring RAMs and pads automatically.

  - Actel ProAsic/P/3, IGLOO/2, RTG4, PolarFire and Axcelerator FPGAs
  - Aeroflex UT25CRH Rad-Hard 0.25 um CMOS
  - Altera: Most Altera FPGA families
  - Altera-CycloneIII: Altera Cyclone-III/IV FPGA family
  - Altera-Stratix: Altera Stratix FPGA family
  - Altera-StratixII: Altera Stratix/Cyclone-II FPGA families
  - Altera-StratixIII: Altera Stratix-III FPGA family
  - Altera-StratixIV: Altera Stratix-IV FPGA family
  - Altera-StratixV: Altera Stratix-V FPGA family
  - ATC18: Atmel-Nantes 0.18 um rad-hard CMOS
  - NanoXploree : Brave-Medium 
  - Quicklogic : Eclipse/E/II FPGAs
  - UMC-0.18 : UMC 0.18 um CMOS with Virtual Silicon libraries
  - Xilinx-Spartan/2/3/6: Xilinx Spartan/2/3/6 libraries
  - Xilinx-Spartan3E: Xilinx Spartan3E libraries
  - Xilinx-Virtex/E: Xilinx Virtex/E libraries
  - Xilinx-Virtex2/4/5/6/7: Xilinx Virtex2/4/5/6/7 libraries

  Note: Level of technology support depends on type of GRLIB
  distribution. A technology may be present in this list while the
  tech support files are missing from the GRLIB distribution.
  Actel support is only available in commercial and FT distributions.

  Additional target technologies are available that are not selectable
  via the xconfig tool.

Ram library
CONFIG_MEM_VIRAGE
  Select RAM generators for ASIC targets.

Transceiver type
CONFIG_TRANS_GTP0
  Select the transceiver type used in your FPGA

Infer ram
CONFIG_SYN_INFER_RAM
  Say Y here if you want the synthesis tool to infer your
  RAM automatically. Say N to directly instantiate technology-
  specific RAM cells for the selected target technology package.

Infer pads
CONFIG_SYN_INFER_PADS
  Say Y here if you want the synthesis tool to infer pads.
  Say N to directly instantiate technology-specific pads from
  the selected target technology package.

No async reset
CONFIG_SYN_NO_ASYNC
  Say Y here if you disable asynchronous reset in some of the IP cores.
  Might be necessary if the target library does not have cells with
  asynchronous set/reset.

Scan support
CONFIG_SYN_SCAN
  Say Y here to enable scan support in some cores. This will enable
  the scan support generics where available and add logic to make
  the design testable using full-scan.

Use Virtex CLKDLL for clock synchronisation
CONFIG_CLK_INFERRED
  Certain target technologies include clock generators to scale or
  phase-adjust the system and SDRAM clocks. This is currently supported
  for Xilinx, Altera and Proasic3 FPGAs. Depending on technology, you
  can select to use the Xilinx CKLDLL macro (Virtex, VirtexE, Spartan1/2),
  the Xilinx DCM (Virtex-2, Spartan3, Virtex-4), the Xilinx PLLE2 (Virtex-7,
  Kintex-7, Artix-4), the Altera ALTDLL (Stratix, Cyclone),the 
  Proasic3 PLL or the NanoXplore-NX_PLL.
  Choose the 'inferred' option to skip a clock generator.

Clock multiplier
CONFIG_CLK_MUL
  When using the Xilinx DCM, Xilinx PLLE2 or Altera ALTPLL, 
  the system clock can be multiplied with a factor of 2 - 32, 
  and divided by a factor of 1 - 32. This makes it possible to 
  generate almost any desired processor frequency. When using 
  the Xilinx CLKDLL generator, the resulting frequency scale f
  actor (mul/div) must be one of 1/2, 1 or 2. On Proasic3, 
  the factor can be 1 - 128. 
  When using NanoXplore-NXPLL the frequency of the generated clock is
  out_freq  = (in_freq*mul*2)/ (2^clk_odiv)  if in_freq < 100 MHz
  out_freq  = (in_freq*mul)/ (2^clk_odiv)    if in_freq > 100 MHz
  mul can be in range 1-15  

  WARNING: The resulting clock must be within the limits specified
  by the target FPGA family.

Clock divider
CONFIG_CLK_DIV
  When using the Xilinx DCM, Xilinx PLLE2 or Altera ALTPLL, 
  the system clock can be multiplied with a factor of 2 - 32, 
  and divided by a factor of 1 - 32. This makes it possible to 
  generate almost any desired processor frequency. When using 
  the Xilinx CLKDLL generator, the resulting frequency scale f
  actor (mul/div) must be one of 1/2, 1 or 2. On Proasic3, 
  the factor can be 1 - 128. 
  
  WARNING: The resulting clock must be within the limits specified
  by the target FPGA family.

Output clock divider
CONFIG_OCLK_DIV
  When using the Proasic3 PLL, the system clock is generated by three
  parameters: input clock multiplication, input clock division and
  output clock division. Only certain values of these parameters
  are allowed, but unfortunately this is not documented by Actel.
  To find the correct values, run the Libero Smartgen tool and
  insert you desired input and output clock frequencies in the
  Static PLL configurator. The mul/div factors can then be read
  out from tool. 
  When using NanoXplore-NXPLL the frequency of the generated clock is
  out_freq  = (in_freq*mul*2)/ (2^clk_odiv)  if in_freq < 100 MHz
  out_freq  = (in_freq*mul)/ (2^clk_odiv)    if in_freq < 100 MHz


Output clock divider, 2nd clock
CONFIG_OCLKB_DIV
  See help for 'Ouput division factor'. Set this to 0 to disable the
  second clock output.

Output clock divider, 3rd clock
CONFIG_OCLKC_DIV
  See help for 'Ouput division factor'. Set this to 0 to disable the
  third clock output.

System clock multiplier
CONFIG_CLKDLL_1_2
  The Xilinx CLKDLL can scale the input clock with a factor of 0.5, 1.0, 
  or 2.0. Useful when the target board has an oscillator with a too high 
  (or low) frequency for your design. The divided clock will be used as the
  main clock for the whole processor (except PCI and ethernet clocks).

System clock multiplier
CONFIG_DCM_2_3
  The Xilinx DCM and Altera ALTDLL can scale the input clock with a large
  range of factors. Useful when the target board has an oscillator with a 
  too high (or low) frequency for your design. The divided clock will
  be used as the main clock for the whole processor (except PCI and 
  ethernet clocks). NOTE: the resulting frequency must be at least
  24 MHz or the DCM and ALTDLL might not work.

Enable CLKDLL for PCI clock
CONFIG_PCI_CLKDLL
  Say Y here to re-synchronize the PCI clock using a 
  Virtex BUFGDLL macro. Will improve PCI clock-to-output 
  delays on the expense of input-setup requirements.

Use PCI clock system clock
CONFIG_PCI_SYSCLK
  Say Y here to the PCI clock to generate the system clock.
  The PCI clock can be scaled using the DCM or CLKDLL to 
  generate a suitable processor clock.

External SDRAM clock feedback
CONFIG_CLK_NOFB
  Say Y here to disable the external clock feedback to synchronize the
  SDRAM clock. This option is necessary if your board or design does not
  have an external clock feedback that is connected to the pllref input
  of the clock generator.

Number of processors
CONFIG_PROC_NUM
  The number of processor cores.

FPU selection
CONFIG_FPU_NANOFPU
  Select which type of floating point unit is included into the LEON5.

  The NanoFPU is a very small, low performance FPU that is available in
  all versions of GRLIB.

  GRFPU5 is a high performance pipelined FPU, which provides much higher
  performance than the NanoFPU but also uses more area. The GRFPU5 is not
  available in all versions of GRLIB.

AHB data width
CONFIG_AHB_32BIT
  If there are AHB slaves connected to the LEON5 system that support
  accesses wider than 32 bits, this option should be set to match the
  supported width. In addition, the wide slave AHB bus map must be set
  to indicate which address ranges can be accessed using wide accesses.

Wide slave AHB bus map
CONFIG_BWMASK
  Setting indicating which parts of the memory space that can be
  accessed using wide accesses. This must be set manually as it
  can not be detected through the AMBA Plug-and-play information.

  The value is treated as a 16-bit hex value with each bit defining
  if a 256 Mbyte segment supports wide access or not. The right-most
  (LSB) bit defines the maximum width of AHB address 0 - 256 MByte,
  while the left-most bit (MSB) defines AHB address 3840 - 4096 MByte.
  If the bit is set, the corresponding area supports wide access.
  For example, a value of 00F3 defines address ranges
  0x00000000-0x1FFFFFFF and 0x40000000-0x7FFFFFFF as wide access capable.


Fixed cacheability map
CONFIG_CACHE_FIXED
  If this variable is 0, the cacheable memory regions are defined
  by the AHB plug&play information (default). To override the
  plug&play settings, this variable can be set to indicate which
  areas should be cached.

  The value is treated as a 16-bit hex value with each bit defining
  if a 256 Mbyte segment should be cached or not. The right-most
  (LSB) bit defines the cacheability of AHB address 0 - 256 MByte,
  while the left-most bit (MSB) defines AHB address 3840 - 4096 MByte.
  If the bit is set, the corresponding area is cacheable. For example,
  a value of 00F3 defines address ranges 0x00000000-0x1FFFFFFF and
  0x40000000-0x7FFFFFFF as cacheable.
L2 Associativity
CONFIG_L2_ASSO1
  Select how many cache ways the L2 cache should have.

L2 Way size
CONFIG_L2_SZ1
  Select the szie of each way in kbytes. The total L2 cache
  size will be way size * number of ways.

L2 cache line size
CONFIG_L2_LINE16
  The L2 cache can have either 16 or 32 bytes per line. It is
  recommened to use 32 bytes for best performance.

HPROT cachebility decoding
CONFIG_L2_HPROT
  Say yes here to enable the AHB HPROT signals to define if an
  L2 access should be cached. Should be disabled for now until
  all I/O units in grlib generate these signals correctly.

L2 power-on enable
CONFIG_L2_PEN
  Say yes here to enable the L2 cache directly after reset.
  This will allow to use the cache without first enable it
  in software. The cache will automatically be flushed before
  enabled.

Random replacement
CONFIG_L2_RAN
  Say Y here to enable random replacement policy rather then
  the default LRU.

Write-through operation
CONFIG_L2_WT
  The L2 cache operates by default in copy-back mode. Say yes
  here to enable write-through operation at power-on.

Cachebility mapping
CONFIG_L2_MAP
  This 16-bit hexadecimal vaule defines which address areas
  are to be cacheable by the L2 cache. Each bit set indicates
  a cacheable 256 Mbyte block. The left-most bit (LSB) indicates
  address 0 - 256M and so on.

RAM sharing
CONFIG_L2_SHARE
  Say yes here to implement one shared data RAM for all cache ways.
  This will reduce the number of RAM blocks for multi-way caches.

MTRR registers
CONFIG_L2_MTRR
  Specify the number of MTRR registers. Each MTRR can define one
  memory area to be uncached, write-through, or copy-back.

EDAC protection
CONFIG_L2_EDAC_NONE
  Say Yes here to enable EDAC protection.
  Select TechSpec to enable technology specific EDAC, not
  supported for all target technologies.

AXI backend interface
CONFIG_L2_AXI
  Say yes here to enable AXI backend interface
DSU enable
CONFIG_DSU_UART
  Say Y to enable the AHB uart (serial-to-AHB). This is the most
  commonly used debug communication link.

JTAG Enable
CONFIG_DSU_JTAG
  Say Y to enable the JTAG debug link (JTAG-to-AHB). Debugging is done 
  with GRMON through the boards JTAG chain at speeds of up to 800 kbits/s. 

  The TAP controller can be implemented in custom macros on
  Altera, Actel Proasic/3 and Xilinx devices. The commercial
  GRLIB also includes a generic TAP controller in VHDL.

  Supported JTAG cables are Xilinx Parallel Cable III and IV, 
  Xilinx Platform cables (USB), and Altera parallel and USB cables,
  Amontech JTAG key, various FTDI chip based USB/JTAG devices, and
  Actel Flash Pro 3/4 cable.

Ethernet DSU enable
CONFIG_DSU_ETH
  Say Y to enable the Ethernet Debug Communication Link (EDCL). The link
  provides a DSU gateway between ethernet and the AHB bus. Debugging is
  done at 10 or 100 Mbit/s, using the GRMON debug monitor. You must
  enable the GRETH Ethernet MAC for this option to become active.

Size of EDCL trace buffer
CONFIG_DSU_ETHSZ1
  Select the buffer size (in kbytes) for the EDCL. 1 or 2 kbyte is
  usually enough, while a larger buffer will increase the transfer rate.
  When operating at 100 Mbit, use a buffer size of at least 8 kbyte for
  maximum throughput.

MSB IP address
CONFIG_DSU_IPMSB
  Set the MSB 16 bits of the IP address of the EDCL.

LSB IP address
CONFIG_DSU_IPLSB
  Set the LSB 16 bits of the IP address of the EDCL.

MSB ethernet address
CONFIG_DSU_ETHMSB
  Set the MSB 24 bits of the ethernet address of the EDCL.

LSB ethernet address
CONFIG_DSU_ETHLSB
  Set the LSB 24 bits of the ethernet address of the EDCL.

Programmable MAC/IP address
CONFIG_DSU_ETH_PROG
  Say Y to make the LSB 4 bits of the EDCL MAC and IP address
  configurable using the ethi.edcladdr inputs.
AHB status register
CONFIG_AHBSTAT_ENABLE
  Say Y here to enable the AHB status register (AHBSTAT IP).
  The register will latch the AHB address and master index when
  an error response is returned by any AHB slave.

SDRAM separate address buses
CONFIG_AHBSTAT_NFTSLV
  The AHB status register can also latch the AHB address on an external
  input. Select here how many of such inputs are required.

On-chip rom
CONFIG_AHBROM_ENABLE
  Say Y here to add a block on on-chip rom to the AHB bus. The ram
  provides 0-waitstates read access,  burst support, and 8-, 16- 
  and 32-bit data size. The rom will be syntheised into block rams
  on Xilinx and Altera FPGA devices, and into gates on ASIC 
  technologies. GRLIB includes a utility to automatically create
  the rom VHDL model (ahbrom.vhd) from an ELF file. Refer to the GRLIB
  documentation for details.

On-chip rom address
CONFIG_AHBROM_START
  Set the start address of AHB ROM (HADDR[31:20]). The ROM will occupy
  a 1 Mbyte slot at the selected address. Default is 000, corresponding
  to AHB address 0x00000000. When address 0x0 is selected, the rom area
  of any other memory controller is set to 0x10000000 to avoid conflicts.

Enable pipeline register for on-chip rom
CONFIG_AHBROM_PIPE
  Say Y here to add a data pipeline register to the on-chip rom.
  This should be done when the rom is implemenented in (ASIC) gates,
  or in logic cells on FPGAs. Do not use this option when the rom is
  implemented in block rams. If enabled, the rom will operate with 
  one waitstate.

On-chip ram
CONFIG_AHBRAM_ENABLE
  Say Y here to add a block on on-chip ram to the AHB bus. The ram
  provides 0-waitstates read access and 0/1 waitstates write access.
  All AHB burst types are supported, as well as 8-, 16- and 32-bit
  data size.

On-chip ram size
CONFIG_AHBRAM_SZ1
  Set the size of the on-chip AHB ram. The ram is infered/instantiated
  as four byte-wide ram slices to allow byte and half-word write
  accesses. It is therefore essential that the target package can
  infer byte-wide rams. This is currently supported on the generic,
  virtex, virtex2, proasic and axellerator targets.

On-chip ram address
CONFIG_AHBRAM_START
  Set the start address of AHB RAM (HADDR[31:20]). The RAM will occupy
  a 1 Mbyte slot at the selected address. Default is A00, corresponding
  to AHB address 0xA0000000.

On-chip ram pipeline stage
CONFIG_AHBRAM_PIPE
  Set this option to add an extra pipeline stage to the read data of the 
  on-chip RAM. This can improve timing, especially when the memory is 
  large, at the cost of adding an additional cycle delay on read.
Gaisler Ethernet MAC enable
CONFIG_GRETH_ENABLE
  Say Y here to enable the Gaisler Research Ethernet MAC . The MAC has 
  one AHB master interface to read and write packets to memory, and one
  APB slave interface for accessing the control registers. 

Gaisler Ethernet 1G MAC enable
CONFIG_GRETH_GIGA
  Say Y here to enable the Gaisler Research 1000 Mbit Ethernet MAC . 
  The 1G MAC is only available in the commercial version of GRLIB,
  so do NOT enable it if you are using the GPL version.

CONFIG_GRETH_FIFO4
  Set the depth of the receive and transmit FIFOs in the MAC core.
  The MAC core will perform AHB burst read/writes with half the
  size of the FIFO depth.

CONFIG_GRETH_FMC_MODE
  Enable support for Ethernet FMC extension board.
  This option is only valid for Xilinx reference designs
  with Ethernet extension boards via FMC connectors 

CONFIG_GRETH_FT
  Enable fault-tolerance (parity with sparing) for internal RAM
  in Ethernet core. Note that FT for EDCL buffer is enabled via
  separate setting.

CONFIG_GRETH_EDCLFT
  Enable protection for EDCL buffer. This is typically not used as
  the EDCL debug link is not used in harsh environments.

CONFIG_GRETH_PHY_ADDR
  Default PHY address
GPIO port
CONFIG_GRGPIO_ENABLE
  Say Y here to enable a general purpose I/O port. The port can be
  configured from 1 - 32 bits, whith each port signal individually
  programmable as input or output. The port signals can also serve
  as interrupt inputs.

GPIO port witdth
CONFIG_GRGPIO_WIDTH
  Number of bits in the I/O port. Must be in the range of 1 - 32.

GPIO interrupt mask
CONFIG_GRGPIO_IMASK
  The I/O port interrupt mask defines which bits in the I/O port
  should be able to create an interrupt. 

OpenCores I2C Master 
CONFIG_I2C_ENABLE
  Say Y here to enable the OpenCores I2C master.

IU assembly printing
CONFIG_IU_DISAS
  Enable printing of executed instructions to the console.

Write trace to console
CONFIG_AHB_DTRACE
  Say yes here to write a trace of all AHB transfers to the
  simulator console. Has not impact on final netlist.

