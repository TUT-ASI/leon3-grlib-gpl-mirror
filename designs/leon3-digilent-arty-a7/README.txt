This LEON design is tailored to the Digilent Arty A7 35T Arty A7 100T.
---------------------------------------------------------

Two FPGAs supported: XC7A35TI and XC7A100TI (default).

To change the synthesis target to XC7A35TI use the command

make xconfig

click on synthesys and change the FPGA type


Simulation and synthesis
------------------------

The design currently supports synthesis with Xilinx Vivado (tested
with Vivado 2018.1).

If enabled by the user, the design uses the Xilinx MIG memory
interface with an AHB-2.0 interface.  The MIG source code cannot be
distributed due to the prohibitive Xilinx license, so the MIG must be
re-generated with coregen before simulation and synthesis can be done.

Xilinx MIG interface will automatically be generated when Vivado is
launched.

To simulate using GHDL:
  make ghdl
  make ghdl-run

To simulate using XSIM and run systest.c on the Leon design using the
memory controller from Xilinx use the make targets:

  make soft
  make vivado-launch

To simulate using Modelsim/Aldec and run systest.c on the Leon design using 
the memory controller from Xilinx use the make targets:

  make map_xilinx_7series_lib
  make sim
  make mig_7series (only required if Xilinx MIG is enabled via xconfig)
  make soft
  make sim-launch

To simulate using Aldec Riviera use the following make targets:

  make map_xilinx_7series_lib
  make riviera
  make mig_series7 (only required if Xilinx MIG is enabled via xconfig)
  make soft
  make riviera-launch

To synthesize the design, do

  make leon3-vivado (or make leon3-vivado-launch for the GUI flow)

To generate a timing summaries in vivslack.rpt, vivsetup.rpt and vivhold.rpt:
  make vivslack

To program the FPGA:
  make vivprog

To program bitstream into the flash:
  make vivrom

Design specifics
----------------
* The default configuration sets the system frequency to 83 MHz.

* The AHB clock is generated by the MMCM module in the MIG
  controller, and can be controlled via Coregen. When the 
  MIG DDR3 controller isn't present the AHB clock is generated
  from CLKGEN, and can be controlled via xconfig

* In order to connect through the USB JTAG-interface run "grmon -digilent".

* In order to connect through the Ethernet EDCL debug link "grmon -eth 192.168.1.135".

* The JTAG DSU interface is enabled and accessible via the USB/JTAG port
  and USB/UART.
  Start grmon with -digilent to connect with USB/JTAG.

* Ethernet is supported in 10/100Mbit mode and EDCL is enabled.

* LED 0: PLL locked
  LED 1: indicates the end of the calibration phase for the memory controller
  LED 2: DSU is active
  LED 3: Processor is in error mode

  BUTTON 0: reset
  BUTTON 1: DSU break

  SWITCH 3: DSU enable
  SWITCH 2..0: EDCL IP address bit [2:0]

Example GRMON session:


  $ grmon -eth 192.168.0.175 -u

  GRMON LEON debug monitor v3.1.2 64-bit version
  
  Copyright (C) 2019 Cobham Gaisler - All rights reserved.
  For latest updates, go to http://www.gaisler.com/
  Comments or bug-reports to support@gaisler.com

  GRLIB build version: 4245
  Detected frequency:  83.0 MHz
  
  Component                            Vendor
  LEON3 SPARC V8 Processor             Cobham Gaisler
  JTAG Debug Link                      Cobham Gaisler
  GR Ethernet MAC                      Cobham Gaisler
  AHB/APB Bridge                       Cobham Gaisler
  LEON3 Debug Support Unit             Cobham Gaisler
  Xilinx MIG DDR3 Controller           Cobham Gaisler
  Generic AHB ROM                      Cobham Gaisler
  Generic UART                         Cobham Gaisler
  Multi-processor Interrupt Ctrl.      Cobham Gaisler
  Modular Timer Unit                   Cobham Gaisler
  
  Use command 'info sys' to print a detailed report of attached cores

grmon3> info sys
  cpu0      Cobham Gaisler  LEON3 SPARC V8 Processor    
            AHB Master 0
  ahbjtag0  Cobham Gaisler  JTAG Debug Link    
            AHB Master 1
  greth0    Cobham Gaisler  GR Ethernet MAC    
            AHB Master 2
            APB: 80000F00 - 80001000
            IRQ: 12
            edcl ip 192.168.1.135, buffer 2 kbyte
  apbmst0   Cobham Gaisler  AHB/APB Bridge    
            AHB: 80000000 - 80100000
  dsu0      Cobham Gaisler  LEON3 Debug Support Unit    
            AHB: 90000000 - A0000000
            AHB trace: 64 lines, 32-bit bus
            CPU0:  win 8, itrace 64, V8 mul/div, lddel 1
                   stack pointer 0x4ffffff0
                   icache 4 * 4 kB, 32 B/line, rnd
                   dcache 4 * 4 kB, 32 B/line, rnd
  mig0      Cobham Gaisler  Xilinx MIG DDR3 Controller    
            AHB: 40000000 - 50000000
            APB: 80000500 - 80000600
            SDRAM: 256 Mbyte
  ahbrom0   Cobham Gaisler  Generic AHB ROM    
            AHB: 00000000 - 00100000
            32-bit ROM: 1 MB @ 0x00000000
  uart0     Cobham Gaisler  Generic UART    
            APB: 80000100 - 80000200
            IRQ: 2
            Baudrate 38425, FIFO debug mode available
  irqmp0    Cobham Gaisler  Multi-processor Interrupt Ctrl.    
            APB: 80000200 - 80000300
  gptimer0  Cobham Gaisler  Modular Timer Unit    
           APB: 80000300 - 80000400
            IRQ: 8
            8-bit scalar, 2 * 32-bit timers, divisor 83
  
grmon3> load hello.elf
  40000000 .text                     26.0kB /  26.0kB   [===============>] 100%
  40006820 .rodata                    128B              [===============>] 100%
  400068A0 .data                      1.2kB /   1.2kB   [===============>] 100%
  Total size: 27.31kB (626.73kbit/s)
  Entry point 0x40000000
  Image hello.elf loaded
  
grmon3> verify hello.elf
  40000000 .text                     26.0kB /  26.0kB   [===============>] 100%
  40006820 .rodata                    128B              [===============>] 100%
  400068A0 .data                      1.2kB /   1.2kB   [===============>] 100%
  Total size: 27.31kB (604.71kbit/s)
  Entry point 0x40000000
  Image of hello.elf verified without errors
  
grmon3> run
hello, world

  Program exited normally.
  
grmon3> quit

