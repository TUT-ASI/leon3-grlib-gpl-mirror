This design is tailored to the Xilinx Virtex-7 VC707 board

http://www.xilinx.com/vc707

Note: This design requires that the GRLIB_SIMULATOR variable is
correctly set. Please refer to the documentation in doc/grlib.pdf for
additional information.

Note: The Vivado flow and parts of this design are still
experimental. Currently the design configuration should be left as-is.

Note: You must have Vivado 2018.1 in your path for the make targets to work.

The XILINX_VIVADO variable must be exported for the mig_7series target
to work correctly: export XILINX_VIVADO

Design specifics
----------------

* Synthesis should be done using Vivado 2018.1 or newer. For newer versions
  the MIG and SGMII projects may need to be updated.

* This design has GRFPU enabled by default. If your release doesn't contain
  GRFPU, it has to be disabled in order to build the design.

* The DDR3 controller is implemented with Xilinx MIG 7-Series and 
  runs of the 200 MHz clock. The DDR3 memory runs at 400 MHz
  (DDR3-800).

* The AHB clock is generated by the MMCM module in the DDR3
  controller, and can be controlled via Vivado. When the 
  MIG DDR3 controller isn't present the AHB clock is generated
  from CLKGEN, and can be controlled via xconfig

* System reset is mapped to the CPU RESET button

* DSU break is mapped to GPIO east button

* LED 0 indicates processor in debug mode

* LED 1 indicates processor in error mode, execution halted

* LED 2 indicates DDR3 PHY initialization done (Only valid when MIG is present)

* LED 3 indicates internal PLL has locked (Only valid when MIG isn't present)

* 16-bit flash prom can be read at address 0. It can be programmed
  with GRMON version 2.0.30-74 or later.

* The application UART1 is connected to the USB/RS232 connector if 
  switch 5, located on the DIP Switch SW2 of the board, is set to OFF.
  
* The AHB UART can be enabled by setting switch 5 to ON.
  Since the board is equipped with one USB/RS232 connector, APB UART1 and
  AHB UART cannot be used at the same time.

* The JTAG DSU interface is enabled and accesible via the JTAG port.
  Start grmon with -xilusb to connect.

* Ethernet FMC support. (http://ethernetfmc.com/)
  Supports 1000BASE-T, 100BASE-TX, and 10BASE-T standards for RGMII interface
  The MDIO bus of each PHY is routed to the FMC connector separately
  Enable FMC Support via 'make xconfig' or set 'CFG_GRETH_FMC' in config.vhd

* Ethernet FMC Support is enabled via CFG_GRETH_FMC. For more information
  see http://ethernetfmc.com/. Example FPGA image and configuration with 
  FMC Ethernet support is supplied in sub-directory 'bitfiles/fmc'

Simulation and synthesis
------------------------

The design uses the Xilinx MIG memory interface with an AHB-2.0 or AXI4 
interface and Xilinx SGMII PHY Interface. The MIG or the SGMII PHY 
source code cannot be distributed due to the prohibitive Xilinx 
license, so the MIG and/or the SGMII must be re-generated with 
Vivado before simulation and synthesis can be done.

Xilinx MIG and SGMII interface will automatically be generated when 
Vivado is launched  

To simulate using XSIM and run systest.c on the Noel-V design using the memory 
controller from Xilinx use the make targets:

  make soft
  make vivado-launch

To simulate using Modelsim/Aldec and run systest.c on the Noel-V design using 
the memory controller from Xilinx use the make targets:

  make map_xilinx_7series_lib
  make sim
  make mig_7series
  make sgmii_7series
  make sim-launch

To simulate using the Aldec Riviera WS flow use the following make targets:

  make riviera_ws               # creates riviera workspace
  make map_xilinx_7series_lib   # compiles and maps xilinx sim libs
  make mig_7series              # generates MIG IP and adds to riviera project
  make sgmii_7series            # same for SGMII adapter
  make riviera                  # compile full project
  make riviera-launch           # launch simulation

To synthesize the design, do

  make vivado

and then use the programming tool:
  
  make vivado-prog-fpga

to program the FPGA.

After successfully programming the FPGA the user might have to press
the 'CPU RESET' button in order to successfully complete the
calibration process in the MIG. Led 1 and led 2 should be constant
green if the Calibration process has been successful.

If user tries to connect to the board and the MIG has not been
calibrated successfully 'grmon' will output: AMBA plug&play not found!

The MIG and SGMII IP can be disabled either by deselecting the memory
controller and Gaisler Ethernet interface in 'xconfig' or manually
editing the config.vhd file.  When no MIG and no SGMII block is
present in the system normal GRLIB flow can be used and no extra
compile steps are needed. Also when when no MIG is present it is
possible to control and set the system frequency via xconfig.  Note
that the system frequency can be modified via Vivado when the MIG is
present by modifying within specified limits for the MIG IP.

Compiling and launching modelsim when no memory controller and no
ethernet interface is present using Modelsim/Aldec simulator:

  make vsim
  make soft
  make vsim-launch

Simulation options
------------------

All options are set either by editing the testbench or specify/modify the generic 
default value when launching the simulator. For Modelsim use the option "-g" i.e.
to enable processor disassembly to console launch modelsim with the option: "-gdisas=1"

USE_MIG_INTERFACE_MODEL - Use MIG simulation model for faster simulation run time
(Option can now be controlled via 'make xconfig')

disas - Enable processor disassembly to console

DEBUG - Enable extra debug information when using Micron DDR3 models

FPGA configuration
------------------

The BPI flash can be programmed by issuing the command make ise-prog-prom.

The configuration mode setting for SW11 should be M[2:0] = 010 and the full
SW11 should be:

     SW11-1     off
     SW11-2     off
     SW11-3     off
     SW11-4     on
     SW11-5     off

Output from GRMON
-----------------

 grmon -xilusb -u

  GRMON debug monitor v3.2.9-10-g8284505 64-bit internal version
  
  Copyright (C) 2020 Cobham Gaisler - All rights reserved.
  For latest updates, go to http://www.gaisler.com/
  Comments or bug-reports to support@gaisler.com
  
  This internal version will expire on 14/12/2021

Parsing -xilusb
Parsing -u

Commands missing help:

JTAG chain (1): xc7vx485t 
  GRLIB build version: 4261
  Detected frequency:  99.0 MHz
  
  Component                            Vendor
  NOEL-V RISC-V Processor              Cobham Gaisler
  AHB Debug UART                       Cobham Gaisler
  JTAG Debug Link                      Cobham Gaisler
  GR Ethernet MAC                      Cobham Gaisler
  Xilinx MIG Controller                Cobham Gaisler
  Generic AHB ROM                      Cobham Gaisler
  AHB/APB Bridge                       Cobham Gaisler
  RISC-V CLINT                         Cobham Gaisler
  RISC-V PLIC                          Cobham Gaisler
  RISC-V Debug Module                  Cobham Gaisler
  AMBA Trace Buffer                    Cobham Gaisler
  General Purpose I/O port             Cobham Gaisler
  Modular Timer Unit                   Cobham Gaisler
  Generic UART                         Cobham Gaisler
  
  Use command 'info sys' to print a detailed report of attached cores

grmon3> info sys
  cpu0      Cobham Gaisler  NOEL-V RISC-V Processor    
            AHB Master 0
  ahbuart0  Cobham Gaisler  AHB Debug UART    
            AHB Master 2
            APB: fc000e00 - fc000f00
            Baudrate 115200, AHB frequency 99.00 MHz
  ahbjtag0  Cobham Gaisler  JTAG Debug Link    
            AHB Master 3
  greth0    Cobham Gaisler  GR Ethernet MAC    
            AHB Master 4
            APB: fc084000 - fc084100
            IRQ: 5
            edcl ip 192.168.0.237, buffer 16 kbyte
  mig0      Cobham Gaisler  Xilinx MIG Controller    
            AHB: 00000000 - 40000000
            APB: fc080000 - fc080100
            SDRAM: 1024 Mbyte
  ahbrom0   Cobham Gaisler  Generic AHB ROM    
            AHB: c0000000 - e0000000
            32-bit ROM: 512 MB @ 0xc0000000
  apbmst0   Cobham Gaisler  AHB/APB Bridge    
            AHB: fc000000 - fc100000
  clint0    Cobham Gaisler  RISC-V CLINT    
            AHB: e0000000 - e0100000
  plic0     Cobham Gaisler  RISC-V PLIC    
            AHB: f8000000 - fc000000
            4 contexts, 32 interrupt sources
  dm0       Cobham Gaisler  RISC-V Debug Module    
            AHB: fe000000 - ff000000
            hart0: DXLEN 64, MXLEN 64, SXLEN 64, UXLEN 64
                   ISA A D F I M,  Modes M S U
                   Stack pointer 0x3ffffff0
                   icache 4 * 4 kB, 32 B/line, rnd
                   dcache 4 * 4 kB, 32 B/line, rnd
                   3 triggers,
                   itrace 64 lines
  ahbtrace0 Cobham Gaisler  AMBA Trace Buffer    
            AHB: fff00000 - fff20000
            Trace buffer size: 128 lines
  gpio0     Cobham Gaisler  General Purpose I/O port    
            APB: fc083000 - fc083100
  gptimer0  Cobham Gaisler  Modular Timer Unit    
            APB: fc000000 - fc000100
            IRQ: 2
            16-bit scalar, 2 * 32-bit timers, divisor 99
  uart0     Cobham Gaisler  Generic UART    
            APB: fc001000 - fc001100
            IRQ: 1
            Baudrate 38431, FIFO debug mode available
  
grmon3> load hello.elf
                 0 .text             19.7kB /  19.7kB   [===============>] 100%
              4EC0 .rodata            192B              [===============>] 100%
              4F80 .init_array          8B              [===============>] 100%
              4F88 .fini_array          8B              [===============>] 100%
              4F90 .data              2.2kB /   2.2kB   [===============>] 100%
              5850 .sdata              80B              [===============>] 100%
              58A0 .eh_frame            4B              [===============>] 100%
  Total size: 22.16kB (1.15Mbit/s)
  Entry point 0x00000000
  Image hello.elf loaded
  
grmon3> verify hello.elf
                 0 .text             19.7kB /  19.7kB   [===============>] 100%
              4EC0 .rodata            192B              [===============>] 100%
              4F80 .init_array          8B              [===============>] 100%
              4F88 .fini_array          8B              [===============>] 100%
              4F90 .data              2.2kB /   2.2kB   [===============>] 100%
              5850 .sdata              80B              [===============>] 100%
              58A0 .eh_frame            4B              [===============>] 100%
  Total size: 22.16kB (97.69kbit/s)
  Entry point 0x00000000
  Image of hello.elf verified without errors
  
grmon3> run
hello, world

  Forced into debug mode
  0x00004c60: 00100073  ebreak  <_exit+0>
  
grmon3> q
  
Exiting GRMON

